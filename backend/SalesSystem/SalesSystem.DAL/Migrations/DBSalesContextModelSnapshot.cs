// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesSystem.DAL.DbSalesContext;

#nullable disable

namespace SalesSystem.DAL.Migrations
{
    [DbContext(typeof(DBSalesContext))]
    partial class DBSalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesSystem.Entity.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdCategory")
                        .HasName("PK__Category__79D361B6EB79E9DE");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.DocumentNumber", b =>
                {
                    b.Property<int>("IdDocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDocumentNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocumentNumber"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("LastNumber")
                        .HasColumnType("int")
                        .HasColumnName("last_Number");

                    b.HasKey("IdDocumentNumber")
                        .HasName("PK__Document__BB80F59066FEB40A");

                    b.ToTable("DocumentNumber", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icono");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("url");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__C26AF48334F11DDA");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.MenuRol", b =>
                {
                    b.Property<int>("IdMenuRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenuRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuRol"));

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdMenuRol")
                        .HasName("PK__MenuRol__9D6D61A41067E3C5");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("MenuRol", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProduct");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProduct")
                        .HasName("PK__Product__5EEC79D12DA06D7F");

                    b.HasIndex("IdCategory");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F76C69DC798");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.Sale", b =>
                {
                    b.Property<int>("IdSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSale");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSale"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_Documento");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("paymentType");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdSale")
                        .HasName("PK__Sale__C4AEB198EAFCA875");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.SaleDetail", b =>
                {
                    b.Property<int>("IdSaleDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSaleDetail");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSaleDetail"));

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("idProduct");

                    b.Property<int?>("IdSale")
                        .HasColumnType("int")
                        .HasColumnName("idSale");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdSaleDetail")
                        .HasName("PK__SaleDeta__B23385CD63712103");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdSale");

                    b.ToTable("SaleDetail", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime?>("DateRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateRegistry")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullName");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdUser")
                        .HasName("PK__Usuario__3717C982F22FEC6F");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Entity.MenuRol", b =>
                {
                    b.HasOne("SalesSystem.Entity.Menu", "IdMenuNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__MenuRol__idMenu__693CA210");

                    b.HasOne("SalesSystem.Entity.Rol", "IdRolNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__MenuRol__idRol__6A30C649");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SalesSystem.Entity.Product", b =>
                {
                    b.HasOne("SalesSystem.Entity.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK__Product__idCateg__75A278F5");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("SalesSystem.Entity.SaleDetail", b =>
                {
                    b.HasOne("SalesSystem.Entity.Product", "IdProductNavigation")
                        .WithMany("SaleDetails")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK__SaleDetai__idPro__01142BA1");

                    b.HasOne("SalesSystem.Entity.Sale", "IdSaleNavigation")
                        .WithMany("SaleDetails")
                        .HasForeignKey("IdSale")
                        .HasConstraintName("FK__SaleDetai__idSal__00200768");

                    b.Navigation("IdProductNavigation");

                    b.Navigation("IdSaleNavigation");
                });

            modelBuilder.Entity("SalesSystem.Entity.Usuario", b =>
                {
                    b.HasOne("SalesSystem.Entity.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__idRol__6D0D32F4");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SalesSystem.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SalesSystem.Entity.Menu", b =>
                {
                    b.Navigation("MenuRols");
                });

            modelBuilder.Entity("SalesSystem.Entity.Product", b =>
                {
                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("SalesSystem.Entity.Rol", b =>
                {
                    b.Navigation("MenuRols");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SalesSystem.Entity.Sale", b =>
                {
                    b.Navigation("SaleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
